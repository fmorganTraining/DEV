@IsTest
private class AOExperianPreciseIDReportParserTest {
	@IsTest
    private static void testHappyPath() {
        String testData = '{"responseHeader":{"requestType":"PreciseIdOnly","clientReferenceId":"D8FD7YW20180918045614","expRequestId":"RB000011464581","messageTime":"2018-09-18T16:56:14Z","overallResponse":{"decision":"REFER","decisionText":"Continue and Investigate","decisionReasons":["REFER - PreciseID"],"recommendedNextActions":[],"spareObjects":[]},"responseCode":"R0201","responseType":"INFO","responseMessage":"Workflow Complete.","tenantID":"Y36ZJBSA"},"clientResponsePayload":{"orchestrationDecisions":[{"sequenceId":"1","decisionSource":"PreciseID","decision":"REFER","decisionReasons":["REFER - PreciseID"],"score":653,"decisionText":"REFER","nextAction":"Continue","appReference":"34709549","decisionTime":"2018-09-18T22:56:18Z"}],"decisionElements":[{"serviceName":"PreciseId","applicantId":"APPLICANT_1","decision":"R10","score":653,"appReference":"34709549","rules":[{"ruleId":"1003","ruleName":"glbRule01"},{"ruleId":"1008","ruleName":"glbRule02"},{"ruleId":"3401","ruleName":"glbRule03"},{"ruleId":"3405","ruleName":"glbRule04"}],"otherData":{"json":{"fraudSolutions":{"response":{"products":{"preciseIDServer":{"sessionID":"EMSFLEJQXJUEGP1UMVC2LQNA.pidd1v-1809181756150210004458562","header":{"reportDate":"09182018","reportTime":"175616","productOption":"11","subcode":"2851150","referenceNumber":"D8FD7YW20180918045614"},"messages":{"message":[{"number":"57","text":"015000    0500","addrMismatch":"N"}],"consumerStatement":[]},"summary":{"transactionID":"34709549","initialDecision":"R10","finalDecision":"R10","scores":{"preciseIDScore":"653","preciseIDScorecard":"AC OPEN V2","validationScore":"000606","validationScorecard":"AC OPEN VAL V2","verificationScore":"000598","verificationScorecard":"AC OPEN ID THEFT V2","complianceDescription":"No Compliance Code","reasons":{"reason":[{"value":"","code":"B101"},{"value":"","code":"B109"},{"value":"","code":"B110"},{"value":"","code":"B108"},{"value":"","code":"B405"}]},"fpdscore":"000726","fpdscorecard":"AC OPEN FPD V2"}},"preciseMatch":{"version":"02.00","responseStatusCode":{"value":"","code":"00"},"preciseMatchTransactionID":"a10d3326-8866-40fd-a","preciseMatchScore":"618","preciseMatchDecision":{"value":"","code":" "},"addresses":{"address":[{"summary":{"verificationResult":{"value":"","code":"A1"},"type":{"value":"","code":"P "},"unitMismatchResult":{"value":"","code":"  "},"highRiskResult":{"value":"","code":"N "},"counts":{"standardizedAddressReturnCount":1,"residentialAddressMatchCount":1,"residentialAddressReturnCount":1,"highRiskAddressReturnCount":0,"businessAddressMatchCount":0,"businessAddressReturnCount":0}},"detail":{"standardizedAddressRcd":{"surname":"FERGUSON","firstName":"PAUL","address":"PO BOX 94","city":"MARTIN","state":"TN","zipCode":"38237"},"residentialAddressRcd":[{"surname":"FERGUSON","firstName":"PAUL","middle":"J","aliasName":[],"address":"94","city":"MARTIN","state":"TN","zipCode":"38237","areaCode":"272","phone":"5551001"}],"highRiskAddressRcd":[],"highRiskAddressDescription":[{"highRiskDescription":"No high risk business at address/phone"}],"businessAddressRcd":[]}}]},"phones":{"phone":[{"summary":{"verificationResult":{"value":"","code":"NX"},"classification":{"value":"","code":"C"},"highRiskResult":{"value":"","code":"N"},"counts":{"residentialPhoneMatchCount":0,"residentialPhoneReturnCount":0,"highRiskPhoneReturnCount":0,"businessPhoneMatchCount":0,"businessPhoneReturnCount":0}},"detail":{"residentialPhoneRcd":[],"phoneHighRiskRcd":[],"highRiskPhoneDescription":[{"highRiskDescription":"No high risk business at address/phone"}],"businessPhoneRcd":[]}}]},"consumerID":{"summary":{"verificationResult":{"value":"","code":"YA"},"deceasedResult":{"value":"","code":"N"},"formatResult":{"value":"","code":"V"},"issueResult":{"value":"","code":"C"},"counts":{"consumerIDReturnCount":2}},"detail":{"consumerIDRcd":[{"surname":"FERGUSON","firstName":"PAUL","aliasName":[],"address":"PO BOX 94","city":"MARTIN","state":"TN","zipCode":"38237","zipPlus4":"0094","reportedDate":"20060517","lastUpdatedDate":"20060717"},{"surname":"BERRY","firstName":"STEVEN","middle":"J","aliasName":[],"address":"1510 EUBANKS RD","city":"CALHOUN","state":"KY","zipCode":"42327","zipPlus4":"9776","areaCode":"270","phone":"7336625","reportedDate":"20040926","lastUpdatedDate":"20060513"}]}},"dateOfBirth":{"summary":{"matchResult":{"value":"","code":"8"},"yearOfBirth":"1958"}},"driverLicense":{"summary":{"verificationResult":{"value":"","code":"NA"},"formatValidation":{"value":"","code":"V"}}},"changeOfAddresses":{"changeOfAddress":[{"summary":{"verificationResult":{"value":"","code":"N "},"counts":{"changeOfAddressReturnCount":0}}}]},"ofac":{"summary":{"verificationResult":{"value":"","code":"1 "},"counts":{"ofacReturnCount":0}}},"previousAddresses":{"previousAddress":[{"summary":{"counts":{"previousAddressReturnCount":2}},"detail":{"previousAddressRcd":[{"address":"1848 DEER PARK AVE","city":"DEER PARK","state":"NY","zipCode":"11729","zipPlus4":"4318","reportedDate":"20020406","lastUpdatedDate":"20060627"},{"address":"343 ADAMS AVE","city":"DES MOINES","state":"IA","reportedDate":"20060610","lastUpdatedDate":"20060610"}]}}]},"ssnfinder":{"summary":{"counts":{"ssnfinderReturnCount":0}}}},"kba":{"general":{"sessionID":"EMSFLEJQXJUEGP1UMVC2LQNA.pidd1v-1809181756150210004458562","numberOfQuestions":4,"kbaresultCode":0,"kbaresultCodeDescription":"KBA processing successful questions returned"},"questionSet":[{"questionType":25,"questionText":"Which of the following businesses have you been associated with? If there is not a matched business name, please select \'NONE OF THE ABOVE\'.","questionSelect":{"questionChoice":["AUSTIN CONSTRUCTION TAYLOR","CORTS AND SPOOTS","ABBOTT ASSOC","FAMOUS FOOTWEAR","NONE OF THE ABOVE/DOES NOT APPLY"]}},{"questionType":4,"questionText":"You may have opened an auto loan or auto lease in or around April 2018. Please select the dollar amount range in which your monthly auto loan or lease payment falls. If you have not had an auto loan or lease with any of these amount ranges now or in the past, please select \'NONE OF THE ABOVE/DOES NOT APPLY\'.","questionSelect":{"questionChoice":["$640 - $739","$740 - $839","$840 - $939","$940 - $1039","NONE OF THE ABOVE/DOES NOT APPLY"]}},{"questionType":3,"questionText":"According to your credit profile, you may have opened an auto loan in or around April 2018. Please select the lender for this account. If you do not have such an auto loan, select \'NONE OF THE ABOVE/DOES NOT APPLY\'.","questionSelect":{"questionChoice":["WELLS FARGO BANK","TRANSAMERICA","VOLKSWAGEN CREDIT","MITSUBISHI MOTOR CREDI","NONE OF THE ABOVE/DOES NOT APPLY"]}},{"questionType":23,"questionText":"Which of the following is a current or previous employer? If there is not a matched employer name, please select \'NONE OF THE ABOVE\'.","questionSelect":{"questionChoice":["AETNA LIFE AND CASUALTY","DESIGN BY GEORGE","WERNER","UNIVERSITY OF MARYLAND","NONE OF THE ABOVE/DOES NOT APPLY"]}}],"creditQuestionSet":[],"nonCreditQuestionSet":[]},"fcraDetail":{"fraudShield":{"indicator":[{"value":"N","code":"07"},{"value":"N","code":"08"},{"value":"N","code":"09"},{"value":"N","code":"19"},{"value":"N","code":"20"},{"value":"N","code":"22"},{"value":"N","code":"27"}]},"adverseActions":{"adverseAction":[{"value":"","code":" "},{"value":"","code":" "},{"value":"","code":" "},{"value":"","code":" "}]},"fcrarules":{"fcrarule":[{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "}]}},"glbDetail":{"fraudShield":{"indicator":[{"value":"N","code":"01"},{"value":"N","code":"02"},{"value":"N","code":"03"},{"value":"N","code":"04"},{"value":"N","code":"05"},{"value":"Y","code":"06"},{"value":"N","code":"10"},{"value":"N","code":"11"},{"value":"N","code":"13"},{"value":"N","code":"14"},{"value":"N","code":"15"},{"value":"Y","code":"16"},{"value":"N","code":"17"},{"value":"N","code":"18"},{"value":"Y","code":"21"},{"value":"N","code":"25"},{"value":"N","code":"26"}]},"glbRules":{"glbRule":[{"value":"","code":"1003"},{"value":"","code":"1008"},{"value":"","code":"3401"},{"value":"","code":"3405"},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "},{"value":"","code":"    "}]}},"pidxmlversion":"06.00"}}}}}},"decisions":[{"element":"message_Number","value":"57","reason":"015000    0500"},{"element":"initialDecision","value":"R10"},{"element":"finalDecision","value":"R10"},{"element":"kbaResultCode","value":"0","reason":"KBA processing successful questions returned"},{"element":"pidScoreReason1","value":"B101"},{"element":"pidScoreReason2","value":"B109"},{"element":"pidScoreReason3","value":"B110"},{"element":"pidScoreReason4","value":"B108"},{"element":"pidScoreReason5","value":"B405"},{"element":"kbaStatus","value":"Y"}],"matches":[{"name":"pmAddressVerificationResult1","value":"A1"},{"name":"pmPhoneVerificationResult1","value":"NX"},{"name":"pmConsumerIDVerificationResult","value":"YA"},{"name":"pmDateOfBirthMatchResult","value":"8"},{"name":"pmDriverLicenseVerificationResult","value":"NA"},{"name":"pmChangeOfAddressVerificationResult1","value":"N"},{"name":"pmOFACVerificationResult","value":"1"},{"name":"fcraFSIndicator07","value":"N"},{"name":"fcraFSIndicator08","value":"N"},{"name":"fcraFSIndicator09","value":"N"},{"name":"fcraFSIndicator19","value":"N"},{"name":"fcraFSIndicator20","value":"N"},{"name":"fcraFSIndicator22","value":"N"},{"name":"fcraFSIndicator27","value":"N"},{"name":"glbFSIndicator01","value":"N"},{"name":"glbFSIndicator02","value":"N"},{"name":"glbFSIndicator03","value":"N"},{"name":"glbFSIndicator04","value":"N"},{"name":"glbFSIndicator05","value":"N"},{"name":"glbFSIndicator06","value":"Y"},{"name":"glbFSIndicator10","value":"N"},{"name":"glbFSIndicator11","value":"N"},{"name":"glbFSIndicator13","value":"N"},{"name":"glbFSIndicator14","value":"N"},{"name":"glbFSIndicator15","value":"N"},{"name":"glbFSIndicator16","value":"Y"},{"name":"glbFSIndicator17","value":"N"},{"name":"glbFSIndicator18","value":"N"},{"name":"glbFSIndicator21","value":"Y"},{"name":"glbFSIndicator25","value":"N"},{"name":"glbFSIndicator26","value":"N"}],"scores":[{"name":"preciseIDScore","score":653,"type":"score"},{"name":"validationScore","score":606,"type":"score"},{"name":"verificationScore","score":598,"type":"score"},{"name":"fpdScore","score":726,"type":"score"},{"name":"preciseMatchScore","score":618,"type":"score"}]}]},"originalRequestData":{"application":{"applicants":[{"applicantType":"APPLICANT","contactId":"APPLICANT_1","id":"APPLICANT_1_ID","type":"INDIVIDUAL"}]},"contacts":[{"addresses":[{"addressType":"CURRENT","countryCode":"USA","postTown":"MARTIN","postal":"38237","stateProvinceCode":"TN","street":"PO BOX 94","street2":null,"timeAtAddress":{"unit":"MONTH","value":70}}],"emails":[{"email":"pbradley@avoka.com"}],"id":"APPLICANT_1","identityDocuments":[{"documentNumber":"123456789","documentType":"DRIVER_LICENSE","id":"APPLICANT_1_DL","stateProvinceCode":"CO"},{"documentNumber":"666-37-1340","documentType":"SSN","id":"APPLICANT_1_SSN"}],"person":{"names":[{"firstName":"Paul","id":"APPLICANT_1_NAME_1","surName":"Ferguson","type":"CURRENT"}],"personDetails":{"dateOfBirth":"1958-01-01"},"typeOfPerson":"APPLICANT"},"telephones":[{"number":"+1 7733504879"}]}],"control":[{"option":"PIDXML_VERSION","value":"06.00"},{"option":"SUBSCRIBER_PREAMBLE","value":"TRS2"},{"option":"SUBSCRIBER_OPERATOR_INITIAL","value":"ID"},{"option":"SUBSCRIBER_SUB_CODE","value":"2851150"},{"option":"PID_USERNAME","value":"iccu_test"},{"option":"PID_PASSWORD","value":"QXZva2FfSUNDVSMy"},{"option":"PRODUCT_OPTION","value":"11"},{"option":"ACCOUNT_TYPE","value":""},{"option":"DETAIL_REQUEST","value":"D"},{"option":"VENDOR","value":""},{"option":"VENDOR_VERSION","value":""},{"option":"BROKER_NUMBER","value":""},{"option":"END_USER","value":""},{"option":"FREEZE_KEY_PIN","value":""}],"device":{"ipAddress":"114.141.100.202"}}}';
		Map<String, Object> parsedJSON = (Map<String, Object>)JSON.deserializeUntyped(testData);

        Map<String, Object> payload = new Map<String, Object> {
            AOReportParser.RAW_DATA_KEY => parsedJSON
        };

        AOApplicationInfo appInfo = new AOApplicationInfo();
            
        AOExperianPreciseIDReportParser parser = new AOExperianPreciseIDReportParser();
        
        try {
            parser.parsePayload(payload, appInfo);
            System.assert(appInfo.kbaReport != null, 'KBA Report was null!');
            System.debug(JSON.serialize(appInfo.kbaReport));
        } catch (Exception e) {
            System.assert(false, 'Unexpected Exception: ' + e.getMessage() + ' ' + e.getStackTraceString());
        }
    }
    
    @IsTest
    private static void testUnhappyPath() {
        AOExperianPreciseIDReportParser parser = new AOExperianPreciseIDReportParser();
        AOApplicationInfo appInfo = new AOApplicationInfo();
        
        try {
            // Null payload
            parser.parsePayload(null, appInfo);
            Map<String, Object> report = appInfo.kbaReport;
            System.assert(report != null, 'Report was null with null payload!');
            
            // Null app info; no assertions, it just shouldn't throw an exception
            parser.parsePayload(new Map<String, Object>(), null);
            
            // Missing Map
            parser.parsePayload(new Map<String, Object>(), appInfo);
            report = appInfo.kbaReport;
            System.assert(report != null, 'Report was null with empty payload!');
            
            // Missing all data
            Map<String, Object> payload = new Map<String, Object> {
                AOReportParser.RAW_DATA_KEY => new Map<String, Object>()
            };
            parser.parsePayload(payload, appInfo);
            report = appInfo.kbaReport;
            System.assert(report != null, 'Report was null with missing data!');
        } catch (Exception e) {
            System.assert(false, 'Unexpected Exception: ' + e.getMessage() + ' ' + e.getStackTraceString());
        }
    }
}